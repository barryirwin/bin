#!/usr/bin/env ruby

#
# script to get your github notifications
#

require 'rubygems'
require 'faraday'
require 'json'

# colors
want_color = `git config color.wtf`
want_color = `git config color.ui` if want_color.empty?
$color = case want_color.chomp
    when "true"; true
    when "auto"; $stdout.tty?
end

def red s; $color ? "\033[31m#{s}\033[0m" : s end
def green s; $color ? "\033[32m#{s}\033[0m" : s end
def yellow s; $color ? "\033[33m#{s}\033[0m" : s end
def cyan s; $color ? "\033[36m#{s}\033[0m" : s end
def grey s; $color ? "\033[1;30m#{s}\033[0m" : s end
def purple s; $color ? "\033[35m#{s}\033[0m" : s end

def get_github_notifications(token, host="https://api.github.com",
                             path="/notifications")
    conn = Faraday.new(:url => host)
    res = conn.get do |req|
        req.url path
        req.params['per_page'] = 10
        req.headers['Authorization'] = "token #{token}"
    end
    res = JSON.parse(res.body)
    res.map! {|item| {:title => item["subject"]["title"],
                      :type  => item["subject"]["type"],
                      :url   => item["subject"]["url"],
                      :html_url => item["repository"]["html_url"],
                      :repo  => item["repository"]["full_name"]
                        }}
end

def get_authtoken_from_gitconfig
    `git config github.token`
end

if ARGV[0] == "mark-read"
    puts "Marked all notifications as read"
else
    notifications = get_github_notifications(get_authtoken_from_gitconfig)
    maxtypelength = 11

    notifications.each do |n|
        padding = maxtypelength - n[:type].length
        type = "#{" "*padding}#{n[:type]}"
        urlpath = n[:url].split("/")[-2..-1].join("/")
        url = "#{n[:html_url]}/#{urlpath}"
        title = n[:title].gsub("\n","").slice(0,75)
        puts "#{red(type)}: #{title} on <#{yellow(url)}>"
    end
end

